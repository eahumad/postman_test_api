{
    "info": {
      "name": "TEST API Collection",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "_postman_id": "your-unique-id"
    },
    "item": [
      {
        "name": "Health Check",
        "request": {
          "method": "GET",
          "header": [],
          "url": {
            "raw": "http://localhost:3000/api/health",
            "protocol": "http",
            "host": ["localhost:3000"],
            "path": ["api", "health"]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ]
      },
      {
        "name": "Get All Users",
        "request": {
          "method": "GET",
          "header": [],
          "url": {
            "raw": "http://localhost:3000/api/users",
            "protocol": "http",
            "host": ["localhost:3000"],
            "path": ["api", "users"]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "pm.test('Response should be an array', function () {",
                "    pm.expect(pm.response.json()).to.be.an('array');",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ]
      },
      {
        "name": "Create User",
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"name\": \"Alice Johnson\"}"
          },
          "url": {
            "raw": "http://localhost:3000/api/users",
            "protocol": "http",
            "host": ["localhost:3000"],
            "path": ["api", "users"]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "pm.test('Response should contain the created user', function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData).to.have.property('id');",
                "    pm.expect(jsonData).to.have.property('name', 'Alice Johnson');",
                "    pm.collectionVariables.set('userId', jsonData.id);",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ]
      },
      {
        "name": "Get User by ID",
        "request": {
          "method": "GET",
          "header": [],
          "url": {
            "raw": "http://localhost:3000/api/users/{{userId}}",
            "protocol": "http",
            "host": ["localhost:3000"],
            "path": ["api", "users", "{{userId}}"]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "pm.test('Response should contain user details', function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData).to.have.property('id');",
                "    pm.expect(jsonData).to.have.property('name');",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ]
      },
      {
        "name": "Update User",
        "request": {
          "method": "PUT",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"name\": \"Alice Johnson Updated\"}"
          },
          "url": {
            "raw": "http://localhost:3000/api/users/{{userId}}",
            "protocol": "http",
            "host": ["localhost:3000"],
            "path": ["api", "users", "{{userId}}"]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "pm.test('Response should contain updated user details', function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData).to.have.property('name', 'Alice Johnson Updated');",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ]
      },
      {
        "name": "Delete User",
        "request": {
          "method": "DELETE",
          "header": [],
          "url": {
            "raw": "http://localhost:3000/api/users/{{userId}}",
            "protocol": "http",
            "host": ["localhost:3000"],
            "path": ["api", "users", "{{userId}}"]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "pm.test('Response should confirm user deletion', function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData).to.have.property('message');",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ]
      }
    ]
  }
  